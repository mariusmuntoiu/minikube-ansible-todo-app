- hosts: todo_vm
  become: yes
  tasks:
    - name: Ensure software-properties-common is installed (for apt-add-repository)
      apt:
        name: software-properties-common
        state: present

    - name: Ensure python3-apt is installed
      apt:
        name: python3-apt
        state: present

    - name: Install python3-pip
      apt:
        name: python3-pip
        state: present
      become: yes

    - name: Install required Python modules
      pip:
        name:
         - openshift
         - kubernetes
        executable: pip3
      become: yes

    - name: Install Minikube dependencies
      apt:
        name:
          - apt-transport-https
          - curl
        state: present

    - name: Add Google's apt key
      apt_key:
        url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
        state: present

    - name: Add Kubernetes apt repository
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Install kubelet kubeadm kubectl
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Install Docker dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present


    - name: Add Docker's official GPG key
      apt_key:
        url: "https://download.docker.com/linux/ubuntu/gpg"
        state: present


    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable"
        state: present

    - name: Install Docker CE
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Ensure Docker is started and enabled at boot
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Update APT cache
      apt:
        update_cache: yes

    - name: Install Minikube
      get_url:
        url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        dest: /usr/local/bin/minikube
        mode: '0755'

    - name: Add user to docker group
      user:
        name: vmuser
        groups: docker
        append: yes
      become: yes
        #notify: restart docker

        #handlers:
        #- name: restart docker
        #service:
        #name: docker
        #state: restarted

    - name: Start Minikube
      command: minikube start --driver=docker
      become: no
      become_user: vmuser
    
    - name: Enable Ingress Addon in Minikube
      command: minikube addons enable ingress
      become: no
      
    - name: Check if Helm is already installed
      command: helm version --short
      register: helm_version
      failed_when: false
      changed_when: false

    - name: Download Helm binary
      get_url:
        url: "https://get.helm.sh/helm-v3.7.0-linux-amd64.tar.gz" 
        dest: "/tmp/helm-v3.7.0-linux-amd64.tar.gz"
        mode: '0755'
      when: helm_version.rc != 0

    - name: Extract Helm tarball
      unarchive:
        src: "/tmp/helm-v3.7.0-linux-amd64.tar.gz"
        dest: "/tmp"
        remote_src: true
      when: helm_version.rc != 0
   
    - name: Move Helm binary to PATH
      command: mv /tmp/linux-amd64/helm /usr/local/bin/helm
      when: helm_version.rc != 0

    - name: Verify Helm Installation
      command: helm version --short
      register: post_install_helm_version
      failed_when: post_install_helm_version.rc != 0

      # - name: Ensure Helm repo for nginx-ingress is added
      # command: helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
      # register: repo_added
      #changed_when: "'\"ingress-nginx\" has been added to your repositories' in repo_added.stdout"

    - name: Check if nginx-ingress is already installed
      command: helm list -n default -f nginx-ingress
      register: helm_list_nginx
      changed_when: false
      failed_when: false

        # - name: Install nginx-ingress using Helm
        #command: helm install nginx-ingress ingress-nginx/ingress-nginx --kubeconfig=/home/ansible/.kube/config
        #register: helm_install
        #changed_when: "'NAME: nginx-ingress-backup' in helm_install.stdout"
        #when: "'nginx-ingress' not in helm_list_nginx.stdout"

    - name: Update Helm repo
      command: helm repo update

      # - name: Pause for 60 seconds to ensure ingress controller is ready
      #pause:
      #  seconds: 60

      #    - name: Install nginx-ingress using Helm
      # command: helm install nginx-ingress ingress-nginx/ingress-nginx --kubeconfig=/home/ansible/.kube/config
      # register: helm_install 
      #changed_when: "'NAME: nginx-ingress-backup' in helm_install.stdout"
      #args:
      #  creates: /etc/helm/namespace/ingress-nginx # This is a pseudo path. Helm doesn't create file-based indicators for installs.
      
  
    - name: Deploy Todo Application
      k8s:
        kubeconfig: /home/ansible/.kube/config
        src: /home/ansible/deployments-minikube/todo-app-full-deploy.yaml
        namespace: default
        apply: yes
    

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Nginx
      apt:
        name: nginx
        state: present

    - name: Create Nginx reverse proxy configuration
      copy:
        content: |
          server {
              listen 80;
              server_name todoapp-ansible.dpdev.ch;

              location / {
                  proxy_pass http://192.168.49.2:31000; # Change the IP and port to your Minikube IP and nodePort
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
        dest: /etc/nginx/sites-available/reverse-proxy-ansible.conf

    - name: Enable Nginx configuration
      file:
        src: /etc/nginx/sites-available/reverse-proxy-ansible.conf
        dest: /etc/nginx/sites-enabled/reverse-proxy-ansible.conf
        state: link

    - name: Test Nginx configuration
      command:
        cmd: nginx -t
      register: test_output
      changed_when: false

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

